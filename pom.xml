<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>fr.ill.ics</groupId>
	<artifactId>cameo-api-java</artifactId>
	<version>0.0.1</version>
	<name>CameoJavaAPI</name>
	<description>Cameo Java API</description>
	<url>https://code.ill.fr/instrument-control/cameo-api-java</url>

	<!-- Connection to git repository -->
	<scm>
		<connection>scm:git:https://code.ill.fr/instrument-control/cameo-api-java.git</connection>
	</scm>

	<distributionManagement>
		<repository>
			<id>ill-repo</id>
			<name>The ILL Maven Repository</name>
			<url>https://maven.ill.fr/content/repositories/releases</url>
		</repository>
		<snapshotRepository>
			<id>ill-repo</id>
			<name>The ILL Maven Repository</name>
			<url>https://maven.ill.fr/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>

	<repositories>
		<repository>
			<id>ill-repo-thirdparty</id>
			<url>https://maven.ill.fr/content/repositories/thirdparty</url>
		</repository>
		<repository>
			<id>ill-repo-releases</id>
			<url>https://maven.ill.fr/content/repositories/releases</url>
		</repository>
		<repository>
			<id>ill-repo-snapshots</id>
			<url>https://maven.ill.fr/content/repositories/snapshots</url>
		</repository>
	</repositories>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.zeromq</groupId>
			<artifactId>jeromq</artifactId>
			<version>0.3.5</version>
		</dependency>
		<dependency>
			<groupId>com.google.protobuf</groupId>
			<artifactId>protobuf-lite-java</artifactId>
			<version>2.6.1</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>

			<!-- We force the compilation with 1.7 to ensure SUSE and Android execution -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>

			<!-- Plugin to get the SVN revision -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.3</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<doCheck>false</doCheck>
					<doUpdate>false</doUpdate>
					<username>ics</username>
					<password>icsics</password>
				</configuration>
			</plugin>

			<!-- Incorporate the SVN revision in the Manifest -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
						<manifestEntries>
							<SCM-Revision>${buildNumber}</SCM-Revision>
							<Build-Timestamp>${maven.build.timestamp}</Build-Timestamp>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

			<!-- We generate the sources from proto in process-resources to ensure to have them before the compile phase -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>process-resources</id>
						<phase>process-resources</phase>
						<configuration>
							<target>
								<property name="protoFlags" value="-I${env.NOMAD_HOME}/src/common/protobuf/proto --java_out=src/main/java" />
								<property name="protoDir" value="${env.NOMAD_HOME}/src/common/protobuf/proto" />

								<echo message="Generating Messages.java" />
								<exec executable="protoc">
									<arg line="-Isrc/main/proto --java_out=src/main/java src/main/proto/Messages.proto" />
								</exec>

							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>install</id>
						<phase>install</phase>
						<configuration>
							<target>
								<copy file="target/${project.artifactId}-${project.version}-test.jar" tofile="target/${project.artifactId}-test.jar" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Assemble a single jar for tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<!-- No version is provided to simplify the test with server. -->
					<finalName>${project.artifactId}-${project.version}-test</finalName>
					<appendAssemblyId>false</appendAssemblyId>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>