set(CPACK_PACKAGE_NAME cameo)
set (CPACK_PACKAGE_CHECKSUM MD5)

set (CPACK_COMPONENT_DEV_REQUIRED ON)
set (CPACK_COMPONENT_LIB_REQUIRED ON)
set (CPACK_COMPONENT_DEV_DEPENDS LIB )

set (CPACK_DEBIAN_PACKAGE_SHLIBDEPS ON )
set (CPACK_DEBIAN_PACKAGE_GENERATE_SHLIBS ON )
set (CPACK_DEBIAN_PACKAGE_GENERATE_SHLIBS_POLICY ">=" )
#set (CPACK_DEBIAN_ENABLE_COMPONENT_DEPENDS ON)
#set (DEBIAN_PACKAGE_BUILDS_DEPENDS "gcc (>=8), gcc-c++ (>=8), cmake (>=${CMAKE_MINIMUM_REQUIRED_VERSION})" )
set (CPACK_DEBIAN_LIB_PACKAGE_DEPENDS "cameo-server(>=1.0.2)" )


set(CPACK_DEBIAN_DEV_PACKAGE_NAME ${LIBNAME}-dev)
set(CPACK_DEBIAN_DEV_PACKAGE_NAME ${LIBNAME}-dev )
set(CPACK_DEBIAN_LIB_PACKAGE_NAME ${LIBNAME}-lib)
set(CPACK_DEBIAN_LIB_PACKAGE_NAME ${LIBNAME}-lib )

set(CPACK_DEBIAN_DEV_PACKAGE_ARCHITECTURE "amd64")
set(CPACK_DEBIAN_DEV_FILE_NAME ${CPACK_DEBIAN_DEV_PACKAGE_NAME}_${PROJECT_VERSION}_${CPACK_DEBIAN_DEV_PACKAGE_ARCHITECTURE}.deb )
set(CPACK_DEBIAN_LIB_PACKAGE_ARCHITECTURE "amd64")
set(CPACK_DEBIAN_LIB_FILE_NAME ${CPACK_DEBIAN_LIB_PACKAGE_NAME}_${PROJECT_VERSION}_${CPACK_DEBIAN_LIB_PACKAGE_ARCHITECTURE}.deb )

#if((${CMAKE_BUILD_TYPE} EQUAL "Debug") OR (${CMAKE_BUILD_TYPE} EQUAL "RelWithDebInfo"))
#  set (CPACK_DEBIAN_DEBUGINFO_PACKAGE ON)
#  set (CPACK_RPM_DEBUGINFO_PACKAGE ON)
#endif()

####### CPACK RPM
#message("CPACK SYSTEM NAME: ${CMAKE_SYSTEM_NAME}")



# cpack_add_component(lib
#   DISPLAY_NAME "LIBB"
#   DESCRIPTION "runtime library"
#   REQUIRED #[HIDDEN | REQUIRED | DISABLED ]
#   GROUP LIBBB
#   #DEPENDS 
#   #[INSTALL_TYPES type1 type2 ... ]
#   #[DOWNLOADED]
#   #[ARCHIVE_FILE filename]
#   #[PLIST filename]
#   )

# cpack_add_component(dev
#   DISPLAY_NAME "DEVV"
#   DESCRIPTION "library development"
#   #REQUIRED #[HIDDEN | REQUIRED | DISABLED ]
#   GROUP DEVVV
#   DEPENDS lib
#   #[INSTALL_TYPES type1 type2 ... ]
#   #[DOWNLOADED]
#   #[ARCHIVE_FILE filename]
#   #[PLIST filename]
#   )

include(CPackConfig.cmake)
set( CPACK_INSTALL_CMAKE_PROJECTS "build/;cameo-api-cpp;ALL;/")
